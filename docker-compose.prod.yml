version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: gmeeting_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:${DB_PORT}:3306"  # Bind to localhost only
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups:ro  # Mount backup directory
    networks:
      - gmeeting_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: gmeeting_redis_prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "127.0.0.1:${REDIS_PORT}:6379"  # Bind to localhost only
    volumes:
      - redis_data:/data
    networks:
      - gmeeting_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    image: gmeeting-backend:latest
    container_name: gmeeting_backend_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - BACKEND_PORT=3001
      - FRONTEND_URL=${FRONTEND_URL}
      - CORS_ORIGIN=${FRONTEND_URL}
    ports:
      - "127.0.0.1:${BACKEND_PORT}:3001"  # Bind to localhost only
    depends_on:
      - mysql
      - redis
    networks:
      - gmeeting_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  sfu-server:
    image: gmeeting-sfu:latest
    container_name: gmeeting_sfu_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SFU_PORT=3002
      - BACKEND_URL=http://backend:3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - MEDIASOUP_WORKERS=${MEDIASOUP_WORKERS}
      - ANNOUNCED_IP=${ANNOUNCED_IP}
      - MEDIASOUP_MIN_PORT=10000
      - MEDIASOUP_MAX_PORT=10100
    ports:
      - "127.0.0.1:${SFU_PORT}:3002"  # Bind to localhost only
      - "10000-10100:10000-10100/udp"  # MediaSoup RTC ports
    depends_on:
      - redis
      - backend
    networks:
      - gmeeting_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  frontend:
    image: gmeeting-frontend:latest
    container_name: gmeeting_frontend_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=${BACKEND_URL}
      - NUXT_PUBLIC_SOCKET_URL=${BACKEND_URL}
      - NUXT_PUBLIC_SFU_URL=${SFU_URL}
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    ports:
      - "127.0.0.1:${FRONTEND_PORT}:3000"  # Bind to localhost only
    depends_on:
      - backend
    networks:
      - gmeeting_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: gmeeting_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - sfu-server
    networks:
      - gmeeting_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Monitoring with Watchtower (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: gmeeting_watchtower_prod
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600  # Check every hour
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: --interval 3600 --cleanup
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  gmeeting_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
